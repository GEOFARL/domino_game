(()=>{"use strict";var e={91:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},962:(e,t,o)=>{e.exports=o.p+"42e40244edcf332efc9a.js"},548:(e,t,o)=>{e.exports=o.p+"b88d04fba731603756b1.css"},637:(e,t,o)=>{e.exports=o.p+"images/delete-icon.svg"}},t={};function o(i){var n=t[i];if(void 0!==n)return n.exports;var s=t[i]={exports:{}};return e[i](s,s.exports,o),s.exports}o.m=e,o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var i=t.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),o.b=document.baseURI||self.location.href,(()=>{var e=o(91),t=o.n(e),i=new URL(o(548),o.b),n=new URL(o(962),o.b),s=new URL(o(637),o.b);t()(i),t()(n),t()(s);class a{constructor(e,t,o){this.value=e,this.row=t,this.col=o,this.done=!1}}class r{constructor(e,t){this.a=e,this.b=t,this.direction=Math.round(3*Math.random()),this.tipRow=null,this.tipCol=null,this.rotated=!1}getValue(e,t){return e===this.tipRow&&t===this.tipCol?this.a:this.b}static setupDomino(e,t,o){const[i,n]=t;e.direction=o,e.tipRow=i,e.tipCol=n}static areTheSame(e,t){return e.a===t.a&&e.b===t.b||e.a===t.b&&e.b===t.a}static rotateDomino(e){e.rotated=!e.rotated,[e.a,e.b]=[e.b,e.a]}}function l(e){const t=new c(e.size,[]),o=Array(e.size).fill(0).map((()=>Array(e.size).fill(0)));for(let i=0;i<e.size;i+=1)for(let n=0;n<e.size;n+=1)e.board[i][n]instanceof r?o[i][n]=d(e.board[i][n]):e.board[i][n]instanceof a?o[i][n]=h(e.board[i][n],t):o[i][n]=e.board[i][n];const i=[];e.availableDominos.forEach((e=>{i.push(d(e))}));const n=[];return e.cellValues.forEach((e=>{n.push(h(e,t))})),t.board=o,t.availableDominos=i,t.cellValues=n,t}function d(e){const t=structuredClone(e);return Object.setPrototypeOf(t,r.prototype),t}function h(e,t){const o=structuredClone(e);return Object.setPrototypeOf(o,a.prototype),o.dominoGrid=t,o}class c{constructor(e,t=null){this.size=e,this.cellValues=[],t?(this.board=t,this.board.forEach((e=>{e.forEach((e=>{e instanceof a&&this.cellValues.push(e)}))}))):this.generateBoard(),this.availableDominos=c.generateDominoes(),this.shuffleDominoes()}generateBoard(){const e=80+Math.floor(11*Math.random());this.board=Array(this.size).fill(0).map((()=>Array(this.size).fill(0)));let t=new c(this.size,Array(this.size).fill(0).map((()=>Array(this.size).fill(0))));[t]=t.findSolution();const o=t.board;for(let i=0;i<this.size;i+=1)for(let n=0;n<this.size;n+=1)if(!(o[i][n]instanceof r)&&Math.random()<e/100){const e=t.findAdjSum(new a(1,i,n));if(e>0){const t=new a(e,i,n);this.cellValues.push(t),this.board[i][n]=t}}}static generateDominoes(){const e=[];for(let t=1;t<6;t+=1)for(let o=t+1;o<=6;o+=1)e.push(new r(t,o));return e}static offsets=[[-1,0],[0,1],[1,0],[0,-1]];shuffleDominoes(){for(let e=this.availableDominos.length-1;e>0;e-=1){const t=Math.floor(Math.random()*(e+1));[this.availableDominos[e],this.availableDominos[t]]=[this.availableDominos[t],this.availableDominos[e]]}}placeDomino(e){const t=e.tipRow,o=e.tipCol,[i,n]=c.offsets[e.direction],s=t+i,a=o+n;this.board[t][o]=e,this.board[s][a]=e}unPlaceDomino(e){const t=e.tipRow,o=e.tipCol,[i,n]=c.offsets[e.direction],s=t+i,a=o+n;this.board[t][o]=0,this.board[s][a]=0}isSameInRow(e,t,o){for(let i=0;i<this.size;i+=1)if(i!==o&&this.isOnBoard(t,i)&&this.board[t][i]instanceof r&&this.board[t][i].getValue(t,i)===e)return!0;return!1}isSameInCol(e,t,o){for(let i=0;i<this.size;i+=1)if(i!==o&&this.isOnBoard(i,t)&&this.board[i][t]instanceof r&&this.board[i][t].getValue(i,t)===e)return!0;return!1}isOnBoard(e,t){const o=this.board.length,i=this.board[0].length;return e>=0&&e<o&&t>=0&&t<i}isPositionFree(e,t){return!!this.isOnBoard(e,t)&&0===this.board[e][t]}findDirections(e,t){const o=[];return this.isPositionFree(e-1,t)&&o.push(0),this.isPositionFree(e,t+1)&&o.push(1),this.isPositionFree(e+1,t)&&o.push(2),this.isPositionFree(e,t-1)&&o.push(3),o}findAvailablePosition(){const e=this.cellValues.find((e=>!e.done));if(0!==this.cellValues.length&&e){const t=e,o=this.findEmptyAdjCells(t);for(const[e,t]of o){const o=this.findDirections(e,t);if(0!==o.length)return[[e,t],o]}return null}for(let e=0;e<this.size;e+=1)for(let t=0;t<this.size;t+=1)if(this.isPositionFree(e,t)){const o=this.findDirections(e,t);if(0!==o.length)return[[e,t],o]}return null}isAdjDomino(e,t){const[o,i]=e,[n,s]=c.offsets[t],a=o+n,l=i+s,d=Math.min(o,a)-1,h=Math.min(i,l)-1,u=d+2+Math.abs(o-a),m=h+2+Math.abs(i-l);for(let e=d;e<=u;e+=1)for(let t=h;t<=m;t+=1)if(this.isOnBoard(e,t)&&!(e===o&&t===i||e===a&&t===l)&&this.board[e][t]instanceof r)return!0;return!1}removeDomino(e){this.availableDominos=this.availableDominos.filter((t=>!r.areTheSame(t,e)))}returnInitialDomino(e,t){this.availableDominos.splice(t,0,e)}markFinishedCells(){const e=[];return this.cellValues.forEach((t=>{t.done||this.isSolved(t)&&(t.done=!0,e.push(t))})),e}static unMarkFinishedCells(e){e.forEach((e=>{e.done=!1}))}findUnFinishedCells(){const e=[];return this.cellValues.forEach((t=>{t.done||e.push(t)})),e}findEmptyAdjCells(e){const t=e.row-1,o=e.col-1,i=[];for(let e=t;e<t+3;e+=1)for(let t=o;t<o+3;t+=1)this.isPositionFree(e,t)&&i.push([e,t]);return i}findAdjSum(e){const t=e.row-1,o=e.col-1;let i=0;for(let n=t;n<t+3;n+=1)for(let t=o;t<o+3;t+=1)!this.isOnBoard(n,t)||n===e.row&&t===e.col||this.board[n][t]instanceof a||this.board[n][t]instanceof r&&(i+=this.board[n][t].getValue(n,t));return i}checkValidity(e){const t=this.findAdjSum(e),o=this.findEmptyAdjCells(e).filter((e=>{const[t,o]=e;return this.findDirections(t,o).length>0}));return t===e.value||t<e.value&&o.length>0}isSolved(e){return this.findAdjSum(e)===e.value}validate(e,t,o){const[i,n]=e,[s,a]=c.offsets[t],r=i+s,l=n+a;return!(!this.isOnBoard(r,l)||this.isSameInRow(o.a,i)||this.isSameInCol(o.a,n)||this.isSameInRow(o.b,r)||this.isSameInCol(o.b,l)||this.isAdjDomino([i,n],t))}validateSolution(){let e=!0;if(e=this.cellValues.every((e=>this.checkValidity(e))),!e)return!1;console.log("cells are valid");for(let e=0;e<this.size;e+=1)for(let t=0;t<this.size;t+=1)if(this.board[e][t]instanceof r){const o=this.board[e][t];if(this.isSameInRow(o.getValue(e,t),e,t)||this.isSameInCol(o.getValue(e,t),t,e))return console.log(this),console.log(o),console.log("1",e,t),!1;if(e===o.tipRow&&t===o.tipCol&&this.isAdjDomino([e,t],o.direction))return console.log("2",e,t),!1}return!0}findSolution(){const e=[];let t=0,o=Date.now();const i=l(this),n=i=>{const s=Date.now();if(console.log("Time passed: "+(s-o)),s-o>6e4)throw t+=1,console.error(`Timeout #${t+1}`),new Error("Timeout");const a=i.findAvailablePosition();let h,u;if(!a)return!1;for([h,u]=a;h;){console.log(`Current position: ${h}, Current Directions: ${u}`);for(let t=0;t<i.availableDominos.length;t+=1){const o=d(i.availableDominos[t]),s=i.availableDominos[t];console.log(`in for loop, i: ${t}`);for(const a of u)if(i.validate(h,a,s)){r.setupDomino(s,h,a),i.placeDomino(s),i.removeDomino(s);const d=i.findUnFinishedCells();let u;if(d&&d.length>0){u=i.markFinishedCells();const n=i.cellValues.find((e=>!e.done));if(0===i.availableDominos.length&&!n)return console.log("finished"),e.push(i),console.log(i),!0;if(n&&!i.checkValidity(n)){u&&u.length>0&&c.unMarkFinishedCells(u),i.returnInitialDomino(o,t),i.unPlaceDomino(s),console.log("continue");continue}}else if(0===i.availableDominos.length)return e.push(i),console.log("finished"),console.log(i),!0;if(console.log("recursive call"),n(l(i)))return!0;u&&u.length>0&&c.unMarkFinishedCells(u),i.returnInitialDomino(o,t),i.unPlaceDomino(s)}r.rotateDomino(s);for(const a of u)if(i.validate(h,a,s)){r.setupDomino(s,h,a),i.placeDomino(s),i.removeDomino(s);const d=i.findUnFinishedCells();let u;if(d&&d.length>0){u=i.markFinishedCells();const n=i.cellValues.find((e=>!e.done));if(0===i.availableDominos.length&&!n)return console.log("finished"),e.push(i),console.log(i),!0;if(n&&!i.checkValidity(n)){u&&u.length>0&&c.unMarkFinishedCells(u),i.returnInitialDomino(o,t),i.unPlaceDomino(s),console.log("continue");continue}}else if(0===i.availableDominos.length)return e.push(i),console.log("finished"),console.log(i),!0;if(console.log("recursive call"),n(l(i)))return!0;u&&u.length>0&&c.unMarkFinishedCells(u),i.returnInitialDomino(o,t),i.unPlaceDomino(s)}}const[t,o]=h;i.board[t][o]=!1;const s=i.findAvailablePosition();s?[h,u]=s:h=null}return!1};for(;0===e.length;)try{if(console.warn(this.availableDominos),!n(l(this)))return[]}catch(e){const n=l(i);if(this.board=n.board,this.cellValues=n.cellValues,this.availableDominos=n.availableDominos,this.shuffleDominoes(),o=Date.now(),3===t)return[]}return e}}const u=[new c(9,[[0,new a(14,0,1),0,0,new a(14,0,4),0,new a(11,0,6),0,0],[0,0,new a(10,1,2),new a(10,1,3),0,0,new a(14,1,6),new a(8,1,7),new a(8,1,8)],[new a(6,2,0),new a(13,2,1),0,new a(12,2,3),0,new a(12,2,5),0,0,0],[0,new a(14,3,1),0,0,0,0,new a(5,3,6),new a(10,3,7),new a(10,3,8)],[0,0,new a(6,4,2),0,new a(17,4,4),new a(17,4,5),0,0,0],[new a(12,5,0),0,new a(4,5,2),new a(6,5,3),0,0,0,new a(10,5,7),new a(10,5,8)],[0,0,new a(6,6,2),0,new a(13,6,4),new a(15,6,5),0,0,0],[0,new a(11,7,1),0,0,0,0,0,0,0],[0,0,new a(11,8,2),0,new a(8,8,4),new a(6,8,5),0,new a(9,8,7),new a(3,8,8)]]),new c(9,[[0,0,new a(11,0,2),0,0,0,new a(9,0,6),new a(10,0,7),new a(10,0,8)],[new a(9,1,0),0,new a(13,1,2),0,0,0,0,0,0],[new a(8,2,0),0,new a(12,2,2),new a(7,2,3),new a(8,2,4),new a(9,2,5),0,new a(17,2,7),0],[new a(8,3,0),0,new a(9,3,2),0,0,new a(12,3,5),0,new a(14,3,7),0],[new a(17,4,0),0,new a(16,4,2),new a(9,4,3),0,new a(13,4,5),0,0,0],[0,0,0,0,0,new a(5,5,5),new a(5,5,6),new a(14,5,7),new a(10,5,8)],[0,new a(20,6,1),0,new a(11,6,3),0,new a(7,6,5),new a(7,6,6),0,0],[0,0,0,0,new a(11,7,4),0,0,0,new a(14,7,8)],[0,new a(10,8,1),new a(6,8,2),new a(6,8,3),new a(11,8,4),0,new a(11,8,6),0,0]]),new c(9,[[0,0,0,new a(12,0,3),0,0,0,0,new a(2,0,8)],[0,0,0,new a(12,1,3),0,0,new a(8,1,6),new a(11,1,7),new a(5,1,8)],[new a(14,2,0),new a(16,2,1),new a(6,2,2),new a(7,2,3),new a(7,2,4),new a(10,2,5),new a(6,2,6),new a(13,2,7),0],[0,0,0,0,new a(5,3,4),0,0,0,0],[0,0,new a(6,4,2),0,new a(11,4,4),new a(12,4,5),new a(13,4,6),0,0],[0,new a(6,5,1),new a(6,5,2),0,new a(16,5,4),0,new a(12,5,6),0,0],[0,new a(6,6,1),0,0,new a(14,6,4),0,new a(16,6,6),new a(10,6,7),new a(10,6,8)],[new a(7,7,0),new a(12,7,1),0,0,new a(15,7,4),0,0,0,new a(7,7,8)],[new a(5,8,0),0,0,0,0,0,0,0,new a(7,8,8)]]),new c(9,[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]]),new c(9,[[0,0,0,0,0,0,0,0,0],[0,new a(20,1,1),0,0,0,0,0,0,0],[0,0,0,0,0,0,0,new a(8,2,7),0],[0,0,0,0,0,0,0,0,0],[0,0,0,new a(8,4,3),0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,new a(9,7,1),0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]])];class m{constructor(){this.isStartedPlacingDomino=!1,this.activeInputs=[]}static handleNumberInput(e){const t=e.value.trim();t.length>0&&+t>0&&+t<23?e.classList.add("number"):(e.value="",e.classList="")}handleDominoInput(e,t,o,i,n,s,a){if(e.classList.contains("domino"))return;const l=e.value.trim();if(l.length>0&&+l>0&&+l<7)if(e.classList.add("domino"),this.isStartedPlacingDomino){if(this.isStartedPlacingDomino){const[l,d]=this.activeInputs[this.activeInputs.length-1],h=+e.value,u=+o[l][d].children[0].value,w=s-l,f=a-d;let g=-1;c.offsets.some(((e,t)=>{const[o,i]=e;return w===o&&f===i&&(g=t,!0)}));const B=new r(u,h);r.setupDomino(B,[+l,+d],g);let b=!1,v=-1;if(t.availableDominos.forEach(((e,t)=>{r.areTheSame(B,e)&&(b=!0,v=t)})),this.isStartedPlacingDomino=!1,this.activeInputs=[],m.enableInputs(t,o),!b)return o[l][d].children[0].value="",o[l][d].children[0].classList="",o[l][d].children[0].disabled=!1,e.value="",void(e.classList="");t.availableDominos.splice(v,1),t.placeDomino(B),e.disabled=!0,0===t.availableDominos.length&&(i.show("All dominos are placed!"),n.disabled=!0,this.disableInputs(t,o),n.classList.remove("btn--disabled"),n.disabled=!1)}}else{this.isStartedPlacingDomino=!0;const i=t.findDirections(s,a);if(0===i.length)return this.isStartedPlacingDomino=!1,e.classList.remove("domino"),void(e.value="");i.forEach((e=>{const[t,o]=c.offsets[e],i=[s+t,a+o];this.activeInputs.push(i)})),this.activeInputs.push([s,a]),this.disableInputs(t,o)}else e.value="",e.classList=""}disableInputs(e,t){for(let o=0;o<e.size;o+=1)for(let i=0;i<e.size;i+=1)t[o][i].children[0]&&"INPUT"===t[o][i].children[0].nodeName&&!t[o][i].children[0].classList.contains("domino")&&(this.activeInputs.some((e=>{const[t,n]=e;return t===o&&n===i}))||(t[o][i].children[0].disabled=!0,t[o][i].children[0].classList.add("muted"))),t[o][i].children[0]&&t[o][i].children[0].classList.contains("domino")&&(t[o][i].children[0].disabled=!0)}static enableInputs(e,t){for(let o=0;o<e.size;o+=1)for(let i=0;i<e.size;i+=1)t[o][i].children[0]&&"INPUT"===t[o][i].children[0].nodeName&&!t[o][i].children[0].classList.contains("domino")&&(t[o][i].children[0].disabled=!1,t[o][i].children[0].classList.remove("muted"))}}class w{constructor(e){this.domGrid=e,this.inputHandler=new m}addNewBoard(e){for(let t=0;t<e.size;t+=1)for(let o=0;o<e.size;o+=1)this.domGrid[t][o].innerHTML='<input type="text" maxlength="2" />',this.domGrid[t][o].querySelector("input").addEventListener("blur",(e=>m.handleNumberInput(e.target)))}solveYourself(e,t,o){for(let i=0;i<e.size;i+=1)for(let n=0;n<e.size;n+=1)e.board[i][n]instanceof a||(this.domGrid[i][n].innerHTML='<input type="text" maxlength="2" />',this.domGrid[i][n].querySelector("input").addEventListener("blur",(s=>this.inputHandler.handleDominoInput(s.target,e,this.domGrid,t,o,i,n))))}getNewBoard(e){const t=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]];for(let o=0;o<e.size;o+=1)for(let i=0;i<e.size;i+=1){console.log(this.domGrid),console.log(o,i),console.log(this.domGrid[o][i]);const{value:e}=this.domGrid[o][i].querySelector("input");0!==e.length&&(t[o][i]=new a(+e,o,i))}return new c(9,t)}}class f{static clearBoard(e,t){for(let o=0;o<t.size;o+=1)for(let i=0;i<t.size;i+=1)e[o][i].innerText="",e[o][i].className=""}static displayBoard(e,t){for(let o=0;o<e.size;o+=1)for(let i=0;i<e.size;i+=1)e.board[o][i]instanceof a?(t[o][i].innerText=e.board[o][i].value,t[o][i].classList.add("number")):e.board[o][i]instanceof r?(t[o][i].innerText=e.board[o][i].getValue(o,i),t[o][i].classList.add("domino")):t[o][i].innerText=""}}class g{constructor(e,t,o,i,n,s,a){this.domGrid=[],this.boardManager=new w(this.domGrid),this.menuSection=e,this.addBoardSection=t,this.solveBoardSection=o,this.message=i,this.boardSelect=n,this.modalError=s,this.modalInfo=a,this.finishSolvingBtn=document.getElementById("finish-solving"),this.clearBoardBtn=document.getElementById("clear-board");const r=[...document.querySelectorAll("td")];for(let e=0;e<r.length;e+=9)this.domGrid.push(r.slice(e,e+9))}showModal(e){switch(e){case"info":this.modalInfo.show();break;case"error":this.modalError.show();break;default:console.log("nothing")}}hideModal(e){switch(e){case"info":this.modalInfo.hide();break;case"error":this.modalError.hide();break;default:console.log("nothing")}}removeBoardOption(e){this.boardSelect.removeOption(e)}switchSelectedBoard(e){this.boardSelect.changeValue(e)}addSelectOption(e){this.boardSelect.addOption(e)}clearBoard(e){f.clearBoard(this.domGrid,e)}displayBoard(e){f.displayBoard(e,this.domGrid)}addNewBoard(e){this.boardManager.addNewBoard(e)}solveYourself(e){this.boardManager.solveYourself(e,this.message,this.finishSolvingBtn)}getNewBoard(e){return this.boardManager.getNewBoard(e)}showButtons(e){switch(e){case"main":this.menuSection.show();break;case"addBoard":this.addBoardSection.show();break;case"solveBoard":this.solveBoardSection.show(),this.finishSolvingBtn.classList.add("btn--disabled"),this.finishSolvingBtn.disabled=!0;break;case"clearBoard":this.clearBoardBtn.classList.remove("hide");break;default:console.log("nothing")}}hideButtons(e){switch(e){case"main":this.menuSection.hide();break;case"addBoard":this.addBoardSection.hide();break;case"solveBoard":this.solveBoardSection.hide();break;case"clearBoard":this.clearBoardBtn.classList.add("hide");break;default:console.log("nothing")}}showMessage(e){this.message.showMessage(e)}hideMessage(){this.message.hideMessage()}static disableAllButtons(){[...document.querySelectorAll("button")].forEach((e=>{e.disabled=!0}))}static enableAllButtons(){[...document.querySelectorAll("button")].forEach((e=>{e.disabled=!1}))}}class B{constructor(e){this.element=e}show(){this.element.classList.remove("hide")}hide(){this.element.classList.add("hide")}}class b extends B{}class v extends B{constructor(e,t){super(e),this.overlay=t}show(){this.overlay.classList.remove("hide"),super.show()}hide(){this.overlay.classList.add("hide"),super.hide()}}class p{constructor(){this.themeSwitcher=document.getElementById("themeSwitcher")}init(){this.themeSwitcher.addEventListener("click",p.toggleTheme),this.setInitialTheme()}static setTheme(e){localStorage.setItem("theme",e),document.documentElement.className=e}static toggleTheme(){"theme-dark"===localStorage.getItem("theme")?p.setTheme("theme-light"):p.setTheme("theme-dark")}setInitialTheme(){"theme-dark"===localStorage.getItem("theme")?(p.setTheme("theme-dark"),this.themeSwitcher.checked=!1):(p.setTheme("theme-light"),this.themeSwitcher.checked=!0)}}const S=e=>{if(0===e.length)return[];const t=[];return e.forEach((e=>{const o=e.board;for(let t=0;t<e.size;t+=1)for(let i=0;i<e.size;i+=1)e.board[t][i]instanceof a?o[t][i]=e.board[t][i].value:e.board[t][i]instanceof r?o[t][i]=`'${e.board[t][i].getValue(t,i)}'`:!1===e.board[t][i]&&(o[t][i]=0);t.push(o)})),t},y={maxCount:150,speed:2,frameInterval:15,alpha:1,gradient:!1,start:null,stop:null,toggle:null,pause:null,resume:null,togglePause:null,remove:null,isPaused:null,isRunning:null},I=()=>{setTimeout((()=>{y.start()}),500)},E=()=>{setTimeout((()=>{y.stop()}),3e3)};let D,M;!function(){y.start=m,y.stop=w,y.toggle=function(){o?w():m()},y.pause=h,y.resume=c,y.togglePause=function(){n?c():h()},y.isPaused=function(){return n},y.remove=function(){stop(),n=!1,a=[]},y.isRunning=function(){return o};const e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame,t=["rgba(30,144,255,","rgba(107,142,35,","rgba(255,215,0,","rgba(255,192,203,","rgba(106,90,205,","rgba(173,216,230,","rgba(238,130,238,","rgba(152,251,152,","rgba(70,130,180,","rgba(244,164,96,","rgba(210,105,30,","rgba(220,20,60,"];let o=!1,i=null,n=!1,s=Date.now(),a=[],r=0,l=null;function d(e,o,i){return e.color=`${t[Math.random()*t.length|0]}${y.alpha})`,e.color2=`${t[Math.random()*t.length|0]}${y.alpha})`,e.x=Math.random()*o,e.y=Math.random()*i-i,e.diameter=10*Math.random()+5,e.tilt=10*Math.random()-10,e.tiltAngleIncrement=.07*Math.random()+.05,e.tiltAngle=Math.random()*Math.PI,e}function h(){n=!0}function c(){n=!1,u()}function u(){if(!n)if(0===a.length)l.clearRect(0,0,window.innerWidth,window.innerHeight),i=null;else{const t=Date.now(),n=t-s;(!e||n>y.frameInterval)&&(l.clearRect(0,0,window.innerWidth,window.innerHeight),function(){const e=window.innerWidth,t=window.innerHeight;let i;r+=.01;for(let n=0;n<a.length;n++)i=a[n],!o&&i.y<-15?i.y=t+100:(i.tiltAngle+=i.tiltAngleIncrement,i.x+=Math.sin(r)-.5,i.y+=.5*(Math.cos(r)+i.diameter+y.speed),i.tilt=15*Math.sin(i.tiltAngle)),(i.x>e+20||i.x<-20||i.y>t)&&(o&&a.length<=y.maxCount?d(i,e,t):(a.splice(n,1),n--))}(),function(e){let t,o,i,n;for(let s=0;s<a.length;s++){if(t=a[s],e.beginPath(),e.lineWidth=t.diameter,i=t.x+t.tilt,o=i+t.diameter/2,n=t.y+t.tilt+t.diameter/2,y.gradient){const s=e.createLinearGradient(o,t.y,i,n);s.addColorStop("0",t.color),s.addColorStop("1.0",t.color2),e.strokeStyle=s}else e.strokeStyle=t.color;e.moveTo(o,t.y),e.lineTo(i,n),e.stroke()}}(l),s=t-n%y.frameInterval),i=requestAnimationFrame(u)}}function m(e,t,i){const s=window.innerWidth,r=window.innerHeight;window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){return window.setTimeout(e,y.frameInterval)};let h=document.getElementById("confetti-canvas");null===h?(h=document.createElement("canvas"),h.setAttribute("id","confetti-canvas"),h.setAttribute("style","display:block;z-index:999999;pointer-events:none;position:fixed;top:0"),document.body.prepend(h),h.width=s,h.height=r,window.addEventListener("resize",(()=>{h.width=window.innerWidth,h.height=window.innerHeight}),!0),l=h.getContext("2d")):null===l&&(l=h.getContext("2d"));let c=y.maxCount;if(t)if(i)if(t==i)c=a.length+i;else{if(t>i){const e=t;t=i,i=e}c=a.length+(Math.random()*(i-t)+t|0)}else c=a.length+t;else i&&(c=a.length+i);for(;a.length<c;)a.push(d({},s,r));o=!0,n=!1,u(),e&&window.setTimeout(w,e)}function w(){o=!1}}();const A=new class{constructor(e){this.storeKey=e}saveBoards(e){localStorage.setItem(this.storeKey,JSON.stringify(S(e)))}getBoards(){return(e=>{if(0===e.length)return[];const t=[];return e.forEach((e=>{const o=e;for(let t=0;t<e.length;t+=1)for(let i=0;i<e.length;i+=1)0!==e[t][i]&&(o[t][i]=new a(e[t][i],t,i));const i=new c(9,o);t.push(i)})),t})(JSON.parse(localStorage.getItem(this.storeKey)))}existBoards(){return localStorage.getItem(this.storeKey)}}("SAVED_BOARDS");A.existBoards()?(D=A.getBoards(),[M]=D):(A.saveBoards(u),[M]=u),(new p).init();const C=new b(document.querySelector(".menu-section")),x=new b(document.querySelector(".add-board")),k=new b(document.querySelector(".solve-board")),L=new class extends B{showMessage(e){super.show(),this.element.innerText=e}hideMessage(){super.hide()}}(document.querySelector(".message")),T=new class extends B{addOption(e){const t=document.createElement("option");t.value=e,t.innerText=`Board №${e+1}`,this.element.appendChild(t)}removeOption(e){[...this.element.children].forEach((e=>e.remove())),e.forEach(((e,t)=>this.addOption(t)))}changeValue(e){this.element.value=e}}(document.getElementById("standard-select")),z=new v(document.querySelector(".modal"),document.querySelector(".overlay")),P=new v(document.querySelector(".modal__info"),document.querySelector(".overlay")),F=new g(C,x,k,L,T,z,P);F.displayBoard(M);const R=new class{constructor(e,t,o,i){this.ui=e,this.currentBoard=t,this.generatedBoard=null,this.boards=o,this.localStorageManager=i,this.clearBoardBtn=document.getElementById("clear-board"),this.generateBtn=document.getElementById("generate"),this.addBoardExitBtn=document.getElementById("add-board-exit"),this.removeBoardBtn=document.getElementById("remove-current-board"),this.addBoardBtn=document.getElementById("add-board"),this.enterNewBoardBtn=document.getElementById("enter-new-board")}init(){this.handleClearBoard=this.handleClearBoard.bind(this),this.handleGenerateBoard=this.handleGenerateBoard.bind(this),this.handleAddBoardExit=this.handleAddBoardExit.bind(this),this.handleRemoveBoard=this.handleRemoveBoard.bind(this),this.handleAddBoard=this.handleAddBoard.bind(this),this.handleEnterNewBoard=this.handleEnterNewBoard.bind(this),this.clearBoardBtn.addEventListener("click",this.handleClearBoard),this.generateBtn.addEventListener("click",this.handleGenerateBoard),this.addBoardExitBtn.addEventListener("click",this.handleAddBoardExit),this.removeBoardBtn.addEventListener("click",this.handleRemoveBoard),this.addBoardBtn.addEventListener("click",this.handleAddBoard),this.enterNewBoardBtn.addEventListener("click",this.handleEnterNewBoard),this.boards.forEach(((e,t)=>this.ui.addSelectOption(t)))}handleClearBoard(){const e=l(this.currentBoard);this.ui.clearBoard(e),this.ui.displayBoard(e),this.clearBoardBtn.classList.add("hide")}handleGenerateBoard(){this.ui.showMessage("Generating a board..."),setTimeout((()=>{this.generatedBoard=new c(9),this.ui.hideButtons("main"),this.ui.showButtons("addBoard");const e=l(this.generatedBoard);this.setCurrentBoard(e),this.ui.clearBoard(e),this.ui.displayBoard(e),this.ui.hideMessage()}),100)}handleAddBoardExit(){if(this.ui.hideButtons("addBoard"),this.ui.showButtons("main"),this.getGeneratedBoard()){this.setGeneratedBoard(null);const e=l(this.boards[0]);return this.ui.clearBoard(e),void this.ui.displayBoard(e)}const e=l(this.currentBoard);this.ui.clearBoard(e),this.ui.displayBoard(e)}handleRemoveBoard(){const e=this.boards.findIndex((e=>e===this.currentBoard));this.boards.splice(e,1),this.ui.removeBoardOption(this.boards),this.localStorageManager.saveBoards(this.boards),this.boards.splice(0,this.boards.length,...this.localStorageManager.getBoards()),this.currentBoard=this.boards[this.boards.length-1],this.ui.switchSelectedBoard(this.boards.length-1);const t=l(this.currentBoard);this.setCurrentBoard(t),this.ui.clearBoard(t),this.ui.displayBoard(t)}handleAddBoard(){let e;console.log(this.boards),this.getGeneratedBoard()?(console.log("generated board"),e=this.getGeneratedBoard(),this.setGeneratedBoard(null)):e=this.ui.getNewBoard(this.currentBoard),this.boards.push(e),this.localStorageManager.saveBoards(this.boards),this.boards.splice(0,this.boards.length,...this.localStorageManager.getBoards()),this.ui.hideButtons("addBoard"),this.ui.showButtons("main"),this.ui.addSelectOption(this.boards.length-1),console.log(this.boards),this.currentBoard=this.boards[this.boards.length-1];const t=l(this.currentBoard);this.setCurrentBoard(t),this.ui.clearBoard(t),this.ui.displayBoard(t),this.ui.switchSelectedBoard(""+(this.boards.length-1))}handleEnterNewBoard(){this.ui.hideButtons("main"),this.ui.addNewBoard(this.currentBoard),this.ui.showButtons("addBoard")}getCurrentBoard(){return this.currentBoard}setCurrentBoard(e){this.currentBoard=e}getGeneratedBoard(){return this.generatedBoard}setGeneratedBoard(e){this.generatedBoard=e}}(F,M,D,A);R.init();const G=new class{constructor(e){this.ui=e,this.closeModalBtn=document.querySelector(".modal__header svg"),this.closeModalInfoBtn=document.querySelector(".modal__info svg")}init(){this.handleModalClose=this.handleModalClose.bind(this),this.handleModalInfoClose=this.handleModalInfoClose.bind(this),this.closeModalBtn.addEventListener("click",this.handleModalClose),this.closeModalInfoBtn.addEventListener("click",this.handleModalInfoClose)}handleModalClose(){this.ui.hideModal("error")}handleModalInfoClose(){this.ui.hideModal("info")}}(F);G.init();const V=new class{constructor(e,t,o,i){this.ui=e,this.solveYourselfBoard=t,this.currentBoard=o,this.boardEventHandler=i,this.finishSolvingBtn=document.getElementById("finish-solving"),this.solveBoardExitBtn=document.getElementById("solve-board-exit"),this.solveAIBtn=document.getElementById("solve-ai"),this.solveYourselfBtn=document.getElementById("solve-yourself")}init(){this.handleFinishSolving=this.handleFinishSolving.bind(this),this.handleSolveBoardExit=this.handleSolveBoardExit.bind(this),this.handleSolveAI=this.handleSolveAI.bind(this),this.handleSolveYourself=this.handleSolveYourself.bind(this),this.finishSolvingBtn.addEventListener("click",this.handleFinishSolving),this.solveBoardExitBtn.addEventListener("click",this.handleSolveBoardExit),this.solveAIBtn.addEventListener("click",this.handleSolveAI),this.solveYourselfBtn.addEventListener("click",this.handleSolveYourself)}handleFinishSolving(){this.ui.hideButtons("solveBoard"),this.ui.showButtons("main"),this.ui.hideMessage(),this.solveYourselfBoard.validateSolution()?(this.ui.showModal("info"),g.disableAllButtons(),I(),E(),setTimeout((()=>g.enableAllButtons()),7e3),setTimeout((()=>this.ui.showButtons("clearBoard")),1e3),window.dominoAPI&&window.dominoAPI.saveSolution(...S([l(this.solveYourselfBoard)]))):(this.ui.showMessage("Your solution is incorrect"),this.ui.showButtons("clearBoard"),setTimeout((()=>{this.ui.hideMessage()}),3500));const e=l(this.solveYourselfBoard);this.ui.clearBoard(e),this.ui.displayBoard(e)}handleSolveBoardExit(){this.ui.hideButtons("solveBoard"),this.ui.showButtons("main"),console.log(this.currentBoard);const e=l(this.currentBoard);console.log(this.ui.dominoGrid),this.ui.clearBoard(e),this.ui.displayBoard(e)}handleSolveAI(){this.ui.showMessage("AI is currently working on the problem..."),setTimeout((()=>{console.log("current",this.boardEventHandler.getCurrentBoard());const e=l(this.boardEventHandler.getCurrentBoard()).findSolution();console.log(e);try{const t=l(e[0]);this.ui.clearBoard(t),this.ui.displayBoard(t),0!==e.length&&(g.disableAllButtons(),I(),E(),setTimeout((()=>g.enableAllButtons()),7e3),setTimeout((()=>this.ui.showButtons("clearBoard")),1e3),window.dominoAPI&&window.dominoAPI.saveSolution(...S(e)))}catch(e){console.log(e),this.ui.showModal("error")}this.ui.hideMessage()}),300)}handleSolveYourself(){this.ui.hideButtons("main"),this.solveYourselfBoard=l(this.currentBoard),this.ui.solveYourself(this.solveYourselfBoard),this.ui.showButtons("solveBoard")}getSolveYourselfBoard(){return this.solveYourselfBoard}setSolveYourselfBoard(e){this.solveYourselfBoard=e}getCurrentBoard(){return this.currentBoard}setCurrentBoard(e){this.currentBoard=e}}(F,void 0,M,R);V.init(),F.boardSelect.element.addEventListener("change",(e=>{M=D[e.target.value];const t=l(M);R.setCurrentBoard(t),V.setCurrentBoard(t),F.clearBoard(t),F.displayBoard(t),F.hideButtons("clearBoard")}))})()})();